package Sliding_window;

public class Max_Sum_Subarray_of_size_k {
    public static int maxSumSubarray(int[] arr, int k) {
        int currsum = 0;
        int maxsum = 0;
        int n = arr.length;
        if (n < k) {
            return 0; // Handle the case where the array size is less than k
        }

        // Calculate the sum of the first k elements
        for (int i = 0; i < k; i++) {
            currsum += arr[i];
        }
        maxsum = currsum;
        // Slide the window and update maxSum
        for (int i = k; i < n; i++) {
            currsum += arr[i] - arr[i - k];
            maxsum = Math.max(currsum, maxsum);
        }

        return maxsum;
    }

    public static void main(String[] args) {
        int[] arr1 = { 100, 200, 300, 400 };
        int k1 = 2;
        System.out.println(maxSumSubarray(arr1, k1)); // Output: 700

        int[] arr2 = { 100, 200, 300, 400 };
        int k2 = 4;
        System.out.println(maxSumSubarray(arr2, k2)); // Output: 1000

        int[] arr3 = { 100, 200, 300, 400 };
        int k3 = 1;
        System.out.println(maxSumSubarray(arr3, k3)); // Output: 400
    }
}
